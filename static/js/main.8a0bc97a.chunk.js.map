{"version":3,"sources":["ReactVirtualKeyboard.js","index.js"],"names":["ReactVirtualKeyboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputBlur","updateCaretPosition","documentClick","event","setTimeout","keyboard","_this$state","state","input","_input","length","some","el","className","indexOf","nodeName","toLowerCase","inputEl","document","getElementsByName","setState","keys","alphabet","currentKeys","shift","numbers","isMounted","inputCaretPosition","_this2","JSON","parse","stringify","slice","setBlur","addEventListener","removeEventListener","newProps","_this3","currentInput","newInput","name","_key","key","trim","activateShift","activateNumbers","updateInputValue","_this4","_this4$state","newKeys","split","forEach","arr","index","_arr","toUpperCase","focus","_this5","_this5$state","splice","value","_this6","updateHandler","currentModelValue","currentModel","toLocaleLowerCase","setCaretPosition","newValue","temp","pos","substr","concat","caretPos","createTextRange","range","move","select","selectionStart","setSelectionRange","getCaretPosition","iCaretPos","oSel","createRange","moveStart","text","react_default","a","createElement","_this7","_this$state2","map","keysIndex","i","keyIndex","onClick","keyClick","createKey","Component","App","model","username","password","phone","message","currentInputElement","update","objectSpread","defineProperty","htmlFor","type","id","onFocus","e","target","onChange","console","log","src_ReactVirtualKeyboard_0","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.8a0bc97a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ReactVirtualKeyboard.css\";\n\nclass ReactVirtualKeyboard extends Component {\n  constructor(props) {\n    super(props);\n    this.keys = [\n      [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"back\"],\n      [\"-\", \"_\", \"(\", \")\", \"{\", \"}\", \"[\", \"]\", \"|\", \":\", '\"'],\n      [\"<\", \">\", \",\", \".\", \"?\", \"/\", \"+\", \"#\", \"$\", \"%\", \"*\"],\n      [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"back\"],\n      [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"enter\"],\n      [\"shift\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"!\", \"?\", \"clear\"],\n      [\"123\", \"@\", \"space\", \".com\", \".\", \"123\"]\n    ];\n    this.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    this.state = {\n      currentKeys: null,\n      shift: false,\n      numbers: false,\n      isMounted: false,\n      input: null,\n      inputCaretPosition: 0,\n      _input: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const keys = JSON.parse(JSON.stringify(this.keys)).slice(3);\n    this.setState(\n      {\n        currentKeys: keys,\n        isMounted: true,\n        input: this.props.input\n      },\n      () => {\n        const { input } = this.state;\n        if (input) {\n          this.setBlur();\n        }\n        document.addEventListener(\"click\", this.documentClick);\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    const { input } = this.state;\n    if (input) {\n      input.removeEventListener(\"blur\", this.inputBlur);\n    }\n    document.removeEventListener(\"click\", this.documentClick);\n  }\n\n  componentWillReceiveProps(newProps) {\n    const currentInput = this.props.input;\n    const newInput = newProps.input;\n    if (!currentInput && newInput) {\n      return this.setState({ input: newInput }, () => {\n        this.setBlur();\n      });\n    }\n    if (\n      currentInput &&\n      newInput &&\n      newInput.name &&\n      currentInput.name &&\n      currentInput.name !== newInput.name\n    ) {\n      this.setState({ input: newInput }, () => {\n        this.setBlur();\n      });\n    }\n  }\n\n  setBlur() {\n    const { input } = this.state;\n    if (input) {\n      input.addEventListener(\"blur\", this.inputBlur);\n    }\n  }\n\n  inputBlur = () => {\n    return this.updateCaretPosition();\n  };\n\n  keyClick(_key) {\n    const key = _key && _key.trim();\n    if (key === \"shift\") {\n      return this.activateShift();\n    }\n    if (key === \"123\") {\n      return this.activateNumbers();\n    }\n    return this.updateInputValue(key);\n  }\n\n  activateShift() {\n    this.setState({ shift: !this.state.shift }, () => {\n      const { shift, input } = this.state;\n      const newKeys = JSON.parse(JSON.stringify(this.keys)).slice(3);\n      const alphabet = this.alphabet.split(\"\");\n      newKeys.forEach(arr => {\n        arr.forEach((key, index, _arr) => {\n          if (key.length === 1 && alphabet.indexOf(key) > -1) {\n            _arr[index] = shift ? key.toUpperCase() : key.toLowerCase();\n          }\n        });\n      });\n      this.setState({ currentKeys: newKeys }, () => {\n        // this.setCaretPosition(input, inputCaretPosition);\n        if (input) {\n          input.focus();\n        }\n      });\n    });\n  }\n\n  activateNumbers() {\n    this.setState({ numbers: !this.state.numbers, shift: false }, () => {\n      const { numbers, input } = this.state;\n      const newKeys = JSON.parse(JSON.stringify(this.keys));\n      numbers ? newKeys.splice(3, 3) : newKeys.splice(0, 3);\n      this.setState({ currentKeys: newKeys }, () => {\n        if (input) {\n          input.focus();\n        }\n      });\n    });\n  }\n\n  updateInputValue(value) {\n    const { input } = this.state;\n    let { inputCaretPosition } = this.state;\n    const { updateHandler } = this.props;\n    if (input && updateHandler && typeof updateHandler === \"function\") {\n      const currentModelValue = input.value;\n      const currentModel = input[\"name\"];\n      if (value === \"enter\") {\n        if (input.nodeName.toLocaleLowerCase() === \"textarea\") {\n          value = \"\\n\";\n        } else {\n          this.setCaretPosition(input, inputCaretPosition);\n          return;\n        }\n      }\n      if (value === \"space\") {\n        value = \" \";\n      }\n      if (value === \"clear\") {\n        inputCaretPosition = 0;\n        return this.setState({ inputCaretPosition }, () => {\n          const { input } = this.state;\n          if (input) {\n            input.focus();\n          }\n          updateHandler(currentModel, \"\");\n        });\n      }\n      if (currentModelValue) {\n        let newValue = \"\";\n        const temp = inputCaretPosition;\n        if (\n          inputCaretPosition >= 0 &&\n          inputCaretPosition <= currentModelValue.length\n        ) {\n          const pos = inputCaretPosition++;\n          if (value === \"back\") {\n            if (temp > 0) {\n              newValue =\n                currentModelValue.substr(0, pos - 1) +\n                currentModelValue.substr(pos);\n              inputCaretPosition -= 2;\n            } else {\n              inputCaretPosition = temp;\n            }\n          } else {\n            newValue =\n              currentModelValue.substr(0, pos) +\n              value +\n              currentModelValue.substr(pos);\n            if (value === \".com\") {\n              inputCaretPosition += 3;\n            }\n          }\n        }\n        if (newValue.length) {\n          this.setState({ inputCaretPosition }, () => {\n            updateHandler(currentModel, newValue);\n          });\n        } else {\n          if (value === \"back\") {\n            if (temp <= 0) {\n              input.focus();\n              return;\n            }\n            this.setState({ inputCaretPosition }, () => {\n              updateHandler(currentModel, \"\");\n            });\n          } else {\n            this.setState({ inputCaretPosition }, () => {\n              updateHandler(currentModel, `${currentModel}${value}`);\n            });\n          }\n        }\n      } else {\n        if (value === \"back\") {\n          input.focus();\n          return;\n        }\n        inputCaretPosition += 1;\n        if (value === \".com\") {\n          inputCaretPosition += 3;\n        }\n        this.setState({ inputCaretPosition }, () => {\n          updateHandler(currentModel, value);\n        });\n      }\n      this.setState({ inputCaretPosition }, () => {\n        this.setCaretPosition(input, this.state.inputCaretPosition);\n      });\n    }\n  }\n\n  setCaretPosition(el, caretPos) {\n    if (el) {\n      if (el.createTextRange) {\n        const range = el.createTextRange();\n        range.move(\"character\", caretPos);\n        range.select();\n        return true;\n      } else {\n        if (el.selectionStart || el.selectionStart === 0) {\n          el.focus();\n          setTimeout(() => el.setSelectionRange(caretPos, caretPos), 0);\n          return true;\n        } else {\n          el.focus();\n          return false;\n        }\n      }\n    }\n  }\n\n  updateCaretPosition() {\n    const { input } = this.state;\n    if (input) {\n      const inputCaretPosition = this.getCaretPosition(input);\n      this.setState({ inputCaretPosition });\n    }\n  }\n\n  getCaretPosition(input) {\n    let iCaretPos = 0;\n    if (document[\"selection\"]) {\n      input.focus();\n      const oSel = document[\"selection\"].createRange();\n      oSel.moveStart(\"character\", -input.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (\n      input &&\n      (input.selectionStart || input.selectionStart === \"0\")\n    ) {\n      iCaretPos = input.selectionStart;\n    }\n    return iCaretPos;\n  }\n\n  documentClick = event => {\n    setTimeout(() => {\n      let keyboard = false;\n      const { input, _input } = this.state;\n      if (event[\"path\"] && event[\"path\"].length) {\n        event[\"path\"].some(el => {\n          if (\n            el.className &&\n            el.className.length &&\n            el.className.indexOf(\"keyboard-container\") >= 0\n          ) {\n            keyboard = true;\n            return true;\n          }\n          return false;\n        });\n      }\n      if (keyboard) {\n        return false;\n      }\n      if (\n        event[\"path\"] &&\n        event[\"path\"][0] &&\n        (event[\"path\"][0].nodeName.toLowerCase() === \"input\" ||\n          event[\"path\"][0].nodeName.toLowerCase() === \"textarea\")\n      ) {\n        if (!input && _input) {\n          const inputEl = document.getElementsByName(_input);\n          if (inputEl.length) {\n            this.setState({ input: inputEl[0] });\n          }\n        }\n        return false;\n      }\n      if (input) {\n        this.setState({ _input: input[\"name\"] });\n      }\n      this.setState({ input: null });\n    }, 0);\n  };\n\n  createKey(key, shift, numbers) {\n    switch (key) {\n      case \"back\": {\n        return <button className=\"back-key\">&#9003;</button>;\n      }\n      case \"enter\": {\n        return <button className=\"enter-key\">&#8629;</button>;\n      }\n      case \"shift\": {\n        return <button className={shift ? \"shift\" : \"\"}>&#8679;</button>;\n      }\n      case \"space\": {\n        return <button className=\"space-key\">&#32;</button>;\n      }\n      case \"clear\": {\n        return <button>&#10754;</button>;\n      }\n      default: {\n        return (\n          <button>\n            {numbers && key === \"123\"\n              ? \"ABC\"\n              : numbers && key === \"ABC\"\n              ? \"123\"\n              : key}\n          </button>\n        );\n      }\n    }\n  }\n\n  render() {\n    const { currentKeys, shift, numbers, isMounted } = this.state;\n    if (!isMounted) {\n      return null;\n    }\n    return (\n      <div className=\"keyboard-container\">\n        {currentKeys.map((keys, keysIndex) => {\n          const i = ++keysIndex;\n          return (\n            <ul className={`row-${i}`} key={i}>\n              {keys.map((key, keyIndex) => {\n                const i = ++keyIndex;\n                return (\n                  <li\n                    key={`${key.toLowerCase()}-${i}`}\n                    onClick={() => this.keyClick(key)}\n                  >\n                    {this.createKey(key, shift, numbers)}\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ReactVirtualKeyboard;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport ReactVirtualKeyboard from \"./ReactVirtualKeyboard\";\n\nclass App extends Component {\n  state = {\n    model: {\n      username: \"\",\n      password: \"\",\n      phone: \"\",\n      message:\"\"\n    },\n    currentInputElement: null\n  };\n  update = (key, value) => {\n    this.setState({ model: { ...this.state.model, [key]: value } });\n  };\n  render() {\n    const { model, currentInputElement } = this.state;\n    return (\n      <div className=\"container-fluid demo-app\">\n        <div className=\"row\">\n          {/* full width keyboad example */}\n          <div className=\"col-md-12\">\n            <div className=\"alert alert-primary text-center\">\n              <h3>A simple virtual keyboard built with react.</h3>\n            </div>\n            <div className=\"card\">\n              <h5 className=\"card-header\">\n                An inline form with full width keyboard\n              </h5>\n              <div className=\"card-body\">\n                <div className=\"row h-100 justify-content-center align-items-center\">\n                  <div className=\"card mb-2\">\n                    <div className=\"card-body\">\n                      <form className=\"form-inline\">\n                        <label htmlFor=\"username\" className=\"mr-2\">\n                          Username:\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"username\"\n                          name=\"username\"\n                          value={model.username}\n                          onFocus={e =>\n                            this.setState({ currentInputElement: e.target })\n                          }\n                          onChange={() => {}}\n                        />\n                        <label className=\"mr-2 ml-3\" htmlFor=\"password\">\n                          Password:\n                        </label>\n                        <input\n                          type=\"password\"\n                          className=\"form-control\"\n                          id=\"password\"\n                          name=\"password\"\n                          value={model.password}\n                          onFocus={e =>\n                            this.setState({ currentInputElement: e.target })\n                          }\n                          onChange={e => {\n                            console.log(e);\n                          }}\n                        />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\n                  <ReactVirtualKeyboard\n                    updateHandler={this.update}\n                    input={currentInputElement}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* half width examples */}\n        <div className=\"row mt-2\">\n            <div className=\"col-md-6\">\n            <div className=\"card\">\n              <h5 className=\"card-header\">\n                By default numeric keyboard\n              </h5>\n              <div className=\"card-body\">\n                <div className=\"row h-100 justify-content-center align-items-center\">\n                  <div className=\"card mb-2\">\n                    <div className=\"card-body\">\n                      <form className=\"form-inline\">\n                        <label htmlFor=\"phone\" className=\"mr-2\">\n                          Phone:\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"phone\"\n                          name=\"phone\"\n                          value={model.phone}\n                          onFocus={e =>\n                            this.setState({ currentInputElement: e.target })\n                          }\n                          onChange={() => {}}\n                        />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\n                  <ReactVirtualKeyboard\n                    updateHandler={this.update}\n                    input={currentInputElement}\n                  />\n                </div>\n              </div>\n            </div>\n            </div>\n            <div className=\"col-md-6\">\n            \n            <div className=\"card\">\n              <h5 className=\"card-header\">\n                Textarea example\n              </h5>\n              <div className=\"card-body\">\n                <div className=\"row h-100 justify-content-center align-items-center\">\n                  <div className=\"card mb-2\">\n                    <div className=\"card-body\">\n                      <form className=\"form-inline\">\n                        <label htmlFor=\"message\" className=\"mr-2\">\n                          Message:\n                        </label>\n                        <textarea\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"message\"\n                          name=\"message\"\n                          value={model.message}\n                          onFocus={e =>\n                            this.setState({ currentInputElement: e.target })\n                          }\n                          onChange={() => {}}\n                        />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\n                  <ReactVirtualKeyboard\n                    updateHandler={this.update}\n                    input={currentInputElement}\n                  />\n                </div>\n              </div>\n            </div>\n            \n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}