{"version":3,"sources":["ReactVirtualKeyboard.js","examples/example-one.js","examples/example-two.js","examples/example-three.js","examples/example-four.js","index.js"],"names":["ReactVirtualKeyboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputBlur","updateCaretPosition","documentClick","event","setTimeout","keyboard","_this$state","state","input","_input","length","some","el","className","indexOf","nodeName","toLowerCase","inputEl","document","getElementsByName","setState","keys","alphabet","currentKeys","shift","numbers","isMounted","inputCaretPosition","_this2","JSON","parse","stringify","slice","setBlur","addEventListener","options","onlyNumeric","activateNumbers","removeEventListener","newProps","_this3","currentInput","newInput","name","k","key","trim","activateShift","updateInput","_this4","_this4$state","newKeys","split","forEach","arr","index","_arr","toUpperCase","focus","_this5","_this5$state","splice","value","_this6","updateHandler","currentModelValue","currentModel","toLocaleLowerCase","setCaretPosition","newValue","temp","pos","substr","concat","caretPos","createTextRange","range","move","select","selectionStart","setSelectionRange","getCaretPosition","iCaretPos","oSel","createRange","moveStart","text","react_default","a","createElement","title","_this7","_this$state2","map","keysIndex","i","keyIndex","onClick","keyClick","createKey","Component","ExampleOne","model","username","password","currentInputElement","update","objectSpread","defineProperty","htmlFor","type","id","onFocus","e","target","onChange","autoFocus","window","innerWidth","src_ReactVirtualKeyboard_0","ExampleTwo","phone","ExampleThree","message","style","margin","height","Example","number1","number2","action","answer","timeout","handleChange","onSubmit","preventDefault","clearTimeout","_this2$state$model","parseFloat","isNaN","Math","round","placeholder","ReactDOM","render","Fragment","example_one","example_two","example_three","example_four","getElementById"],"mappings":"iRAgZeA,qBA5Yb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA2FRQ,UAAY,WACV,OAAOP,EAAKQ,uBA7FKR,EAsRnBS,cAAgB,SAAAC,GACdC,WAAW,WACT,IAAIC,GAAW,EADAC,EAEWb,EAAKc,MAAvBC,EAFOF,EAEPE,MAAOC,EAFAH,EAEAG,OAcf,GAbIN,EAAK,MAAYA,EAAK,KAASO,QACjCP,EAAK,KAASQ,KAAK,SAAAC,GACjB,SACEA,EAAGC,WACHD,EAAGC,UAAUH,QACbE,EAAGC,UAAUC,QAAQ,uBAAyB,KAE9CT,GAAW,GACJ,KAKTA,EACF,OAAO,EAET,GACEF,EAAK,MACLA,EAAK,KAAS,KAC+B,UAA5CA,EAAK,KAAS,GAAGY,SAASC,eACmB,aAA5Cb,EAAK,KAAS,GAAGY,SAASC,eAC5B,CACA,IAAKR,GAASC,EAAQ,CACpB,IAAMQ,EAAUC,SAASC,kBAAkBV,GACvCQ,EAAQP,QACVjB,EAAK2B,SAAS,CAAEZ,MAAOS,EAAQ,KAGnC,OAAO,EAELT,GACFf,EAAK2B,SAAS,CAAEX,OAAQD,EAAK,OAE/Bf,EAAK2B,SAAS,CAAEZ,MAAO,QACtB,IA1THf,EAAK4B,KAAO,CACV,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QACnD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAC9C,CAAC,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SACvD,CAAC,MAAO,IAAK,QAAS,OAAQ,IAAK,QAErC5B,EAAK6B,SAAW,6BAChB7B,EAAKc,MAAQ,CACXgB,YAAa,KACbC,OAAO,EACPC,SAAS,EACTC,WAAW,EACXlB,MAAO,KACPmB,mBAAoB,EACpBlB,OAAQ,IAnBOhB,mFAuBC,IAAAmC,EAAAhC,KACZyB,EAAOQ,KAAKC,MAAMD,KAAKE,UAAUnC,KAAKyB,OAAOW,MAAM,GACzDpC,KAAKwB,SACH,CACEG,YAAaF,EACbK,WAAW,EACXlB,MAAOZ,KAAKJ,MAAMgB,OAEpB,WACoBoB,EAAKrB,MAAfC,OAENoB,EAAKK,UAEPf,SAASgB,iBAAiB,QAASN,EAAK1B,eACxC,IAAMiC,EAAUP,EAAKpC,MAAM2C,QAC3B,GAAIA,KACuB,IAArBA,EAAQb,UAAuBa,EAAQC,aACzCR,EAAKS,mBAEqB,IAAxBF,EAAQC,aAAsB,CAOhCR,EAAKR,SAAS,CAAEG,YANH,CACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,OAAQ,IAAK,8DASH,IACbf,EAAUZ,KAAKW,MAAfC,MACJA,GACFA,EAAM8B,oBAAoB,OAAQ1C,KAAKI,WAEzCkB,SAASoB,oBAAoB,QAAS1C,KAAKM,iEAGnBqC,GAAU,IAAAC,EAAA5C,KAC5B6C,EAAe7C,KAAKJ,MAAMgB,MAC1BkC,EAAWH,EAAS/B,MAC1B,IAAKiC,GAAgBC,EACnB,OAAO9C,KAAKwB,SAAS,CAAEZ,MAAOkC,GAAY,WACxCF,EAAKP,YAIPQ,GACAC,GACAA,EAASC,MACTF,EAAaE,MACbF,EAAaE,OAASD,EAASC,MAE/B/C,KAAKwB,SAAS,CAAEZ,MAAOkC,GAAY,WACjCF,EAAKP,8CAKD,IACAzB,EAAUZ,KAAKW,MAAfC,MACJA,GACFA,EAAM0B,iBAAiB,OAAQtC,KAAKI,4CAQ/B4C,GACP,IAAMC,EAAMD,GAAKA,EAAEE,OACnB,MAAY,UAARD,EACKjD,KAAKmD,gBAEF,QAARF,EACKjD,KAAKyC,kBAEPzC,KAAKoD,YAAYH,2CAGV,IAAAI,EAAArD,KACdA,KAAKwB,SAAS,CAAEI,OAAQ5B,KAAKW,MAAMiB,OAAS,WAAM,IAAA0B,EACvBD,EAAK1C,MAAtBiB,EADwC0B,EACxC1B,MAAOhB,EADiC0C,EACjC1C,MACT2C,EAAUtB,KAAKC,MAAMD,KAAKE,UAAUkB,EAAK5B,OAAOW,MAAM,GACtDV,EAAW2B,EAAK3B,SAAS8B,MAAM,IACrCD,EAAQE,QAAQ,SAAAC,GACdA,EAAID,QAAQ,SAACR,EAAKU,EAAOC,GACJ,IAAfX,EAAInC,QAAgBY,EAASR,QAAQ+B,IAAQ,IAC/CW,EAAKD,GAAS/B,EAAQqB,EAAIY,cAAgBZ,EAAI7B,mBAIpDiC,EAAK7B,SAAS,CAAEG,YAAa4B,GAAW,WAElC3C,GACFA,EAAMkD,sDAMI,IAAAC,EAAA/D,KAChBA,KAAKwB,SAAS,CAAEK,SAAU7B,KAAKW,MAAMkB,QAASD,OAAO,GAAS,WAAM,IAAAoC,EACvCD,EAAKpD,MAAxBkB,EAD0DmC,EAC1DnC,QAASjB,EADiDoD,EACjDpD,MACX2C,EAAUtB,KAAKC,MAAMD,KAAKE,UAAU4B,EAAKtC,OAC/CI,EAAU0B,EAAQU,OAAO,EAAG,GAAKV,EAAQU,OAAO,EAAG,GACnDF,EAAKvC,SAAS,CAAEG,YAAa4B,GAAW,WAClC3C,GACFA,EAAMkD,gDAMFI,GAAO,IAAAC,EAAAnE,KACTY,EAAUZ,KAAKW,MAAfC,MACFmB,EAAuB/B,KAAKW,MAA5BoB,mBACEqC,EAAkBpE,KAAKJ,MAAvBwE,cACR,GAAIxD,GAASwD,GAA0C,oBAAlBA,EAA8B,CACjE,IAAMC,EAAoBzD,EAAMsD,MAC1BI,EAAe1D,EAAK,KAC1B,GAAc,UAAVsD,EAAmB,CACrB,GAA2C,aAAvCtD,EAAMO,SAASoD,oBAIjB,YADAvE,KAAKwE,iBAAiB5D,EAAOmB,GAF7BmC,EAAQ,KASZ,GAHc,UAAVA,IACFA,EAAQ,KAEI,UAAVA,EAEF,OADAnC,EAAqB,EACd/B,KAAKwB,SAAS,CAAEO,sBAAsB,WAAM,IACzCnB,EAAUuD,EAAKxD,MAAfC,MACJA,GACFA,EAAMkD,QAERM,EAAcE,EAAc,MAGhC,GAAID,EAAmB,CACrB,IAAII,EAAW,GACTC,EAAO3C,EACb,GACEA,GAAsB,GACtBA,GAAsBsC,EAAkBvD,OACxC,CACA,IAAM6D,EAAM5C,IACE,SAAVmC,EACEQ,EAAO,GACTD,EACEJ,EAAkBO,OAAO,EAAGD,EAAM,GAClCN,EAAkBO,OAAOD,GAC3B5C,GAAsB,GAEtBA,EAAqB2C,GAGvBD,EACEJ,EAAkBO,OAAO,EAAGD,GAC5BT,EACAG,EAAkBO,OAAOD,GACb,SAAVT,IACFnC,GAAsB,IAI5B,GAAI0C,EAAS3D,OACXd,KAAKwB,SAAS,CAAEO,sBAAsB,WACpCqC,EAAcE,EAAcG,UAG9B,GAAc,SAAVP,EAAkB,CACpB,GAAIQ,GAAQ,EAEV,YADA9D,EAAMkD,QAGR9D,KAAKwB,SAAS,CAAEO,sBAAsB,WACpCqC,EAAcE,EAAc,WAG9BtE,KAAKwB,SAAS,CAAEO,sBAAsB,WACpCqC,EAAcE,EAAD,GAAAO,OAAkBP,GAAlBO,OAAiCX,UAI/C,CACL,GAAc,SAAVA,EAEF,YADAtD,EAAMkD,QAGR/B,GAAsB,EACR,SAAVmC,IACFnC,GAAsB,GAExB/B,KAAKwB,SAAS,CAAEO,sBAAsB,WACpCqC,EAAcE,EAAcJ,KAGhClE,KAAKwB,SAAS,CAAEO,sBAAsB,WACpCoC,EAAKK,iBAAiB5D,EAAOuD,EAAKxD,MAAMoB,gEAK7Bf,EAAI8D,GACnB,GAAI9D,EAAI,CACN,GAAIA,EAAG+D,gBAAiB,CACtB,IAAMC,EAAQhE,EAAG+D,kBAGjB,OAFAC,EAAMC,KAAK,YAAaH,GACxBE,EAAME,UACC,EAEP,OAAIlE,EAAGmE,gBAAwC,IAAtBnE,EAAGmE,gBAC1BnE,EAAG8C,QACHtD,WAAW,kBAAMQ,EAAGoE,kBAAkBN,EAAUA,IAAW,IACpD,IAEP9D,EAAG8C,SACI,kDAMO,IACZlD,EAAUZ,KAAKW,MAAfC,MACR,GAAIA,EAAO,CACT,IAAMmB,EAAqB/B,KAAKqF,iBAAiBzE,GACjDZ,KAAKwB,SAAS,CAAEO,iEAIHnB,GACf,IAAI0E,EAAY,EAChB,GAAIhE,SAAQ,UAAe,CACzBV,EAAMkD,QACN,IAAMyB,EAAOjE,SAAQ,UAAckE,cACnCD,EAAKE,UAAU,aAAc7E,EAAMsD,MAAMpD,QACzCwE,EAAYC,EAAKG,KAAK5E,YAEtBF,IACCA,EAAMuE,gBAA2C,MAAzBvE,EAAMuE,kBAE/BG,EAAY1E,EAAMuE,gBAEpB,OAAOG,oCA4CCrC,EAAKrB,EAAOC,GACpB,OAAQoB,GACN,IAAK,OACH,OACE0C,EAAAC,EAAAC,cAAA,UAAQ5E,UAAU,WAAW6E,MAAM,aAAnC,UAKJ,IAAK,QACH,OACEH,EAAAC,EAAAC,cAAA,UAAQ5E,UAAU,YAAY6E,MAAM,SAApC,UAKJ,IAAK,QACH,OACEH,EAAAC,EAAAC,cAAA,UAAQ5E,UAAWW,EAAQ,QAAU,GAAIkE,MAAM,SAA/C,UAKJ,IAAK,QACH,OACEH,EAAAC,EAAAC,cAAA,UAAQ5E,UAAU,YAAY6E,MAAM,SACjC7C,GAIP,IAAK,QACH,OAAO0C,EAAAC,EAAAC,cAAA,UAAQC,MAAM,SAAd,UAET,QACE,OACEH,EAAAC,EAAAC,cAAA,cACGhE,GAAmB,QAARoB,EACR,MACApB,GAAmB,QAARoB,EACX,MACAA,qCAOL,IAAA8C,EAAA/F,KAAAgG,EAC4ChG,KAAKW,MAAhDgB,EADDqE,EACCrE,YAAaC,EADdoE,EACcpE,MAAOC,EADrBmE,EACqBnE,QAC5B,OAFOmE,EAC8BlE,UAKnC6D,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,sBACZU,EAAYsE,IAAI,SAACxE,EAAMyE,GACtB,IAAMC,IAAMD,EACZ,OACEP,EAAAC,EAAAC,cAAA,MAAI5E,UAAS,OAAA4D,OAASsB,GAAKlD,IAAKkD,GAC7B1E,EAAKwE,IAAI,SAAChD,EAAKmD,GACd,IAAMD,IAAMC,EACZ,OACET,EAAAC,EAAAC,cAAA,MACE5C,IAAG,GAAA4B,OAAK5B,EAAI7B,cAAT,KAAAyD,OAA0BsB,GAC7BE,QAAS,kBAAMN,EAAKO,SAASrD,KAE5B8C,EAAKQ,UAAUtD,EAAKrB,EAAOC,UAfnC,YAlXsB2E,cCwEpBC,6MAvEb9F,MAAQ,CACN+F,MAAO,CACLC,SAAU,GACVC,SAAU,IAEZC,oBAAqB,QAEvBC,OAAS,SAAC7D,EAAKiB,GACbrE,EAAK2B,SAAS,CAAEkF,MAAM5G,OAAAiH,EAAA,EAAAjH,CAAA,GAAMD,EAAKc,MAAM+F,MAAlB5G,OAAAkH,EAAA,EAAAlH,CAAA,GAA0BmD,EAAMiB,+EAE9C,IAAAlC,EAAAhC,KAAAU,EACgCV,KAAKW,MAApC+F,EADDhG,EACCgG,MAAOG,EADRnG,EACQmG,oBACf,OACElB,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,oBACb0E,EAAAC,EAAAC,cAAA,MAAI5E,UAAU,uBAAd,eACA0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,uDACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,QAAM5E,UAAU,eACd0E,EAAAC,EAAAC,cAAA,SAAOoB,QAAQ,WAAWhG,UAAU,QAApC,aAGA0E,EAAAC,EAAAC,cAAA,SACEqB,KAAK,OACLjG,UAAU,eACVkG,GAAG,WACHpE,KAAK,WACLmB,MAAOwC,EAAMC,SACbS,QAAS,SAAAC,GAAC,OACRrF,EAAKR,SAAS,CAAEqF,oBAAqBQ,EAAEC,UAEzCC,SAAU,SAAAF,GACRrF,EAAK8E,OAAO,WAAYO,EAAEC,OAAOpD,QAEnCsD,WAAS,IAEX7B,EAAAC,EAAAC,cAAA,SAAO5E,UAAU,YAAYgG,QAAQ,YAArC,aAGAtB,EAAAC,EAAAC,cAAA,SACEqB,KAAK,WACLjG,UAAU,eACVkG,GAAG,WACHpE,KAAK,WACLmB,MAAOwC,EAAME,SACbQ,QAAS,SAAAC,GAAC,OACRrF,EAAKR,SAAS,CAAEqF,oBAAqBQ,EAAEC,UAEzCC,SAAU,SAAAF,GACRrF,EAAK8E,OAAO,WAAYO,EAAEC,OAAOpD,cAO7CyB,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,iEACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAWwG,OAAOC,WAAa,IAAM,WAAa,IACrD/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEvD,cAAepE,KAAK8G,OACpBlG,MAAOiG,eA9DEL,aCqDVoB,6MApDbjH,MAAQ,CACN+F,MAAO,CACLmB,MAAO,IAEThB,oBAAqB,QAEvBC,OAAS,SAAC7D,EAAKiB,GACbrE,EAAK2B,SAAS,CAAEkF,MAAM5G,OAAAiH,EAAA,EAAAjH,CAAA,GAAMD,EAAKc,MAAM+F,MAAlB5G,OAAAkH,EAAA,EAAAlH,CAAA,GAA0BmD,EAAMiB,+EAE9C,IAAAlC,EAAAhC,KAAAU,EACgCV,KAAKW,MAApC+F,EADDhG,EACCgG,MAAOG,EADRnG,EACQmG,oBACf,OACElB,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,oBACb0E,EAAAC,EAAAC,cAAA,MAAI5E,UAAU,uBAAd,gBACA0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,uDACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,QAAM5E,UAAU,eACd0E,EAAAC,EAAAC,cAAA,SAAOoB,QAAQ,QAAQhG,UAAU,QAAjC,UAGA0E,EAAAC,EAAAC,cAAA,SACEqB,KAAK,OACLjG,UAAU,eACVkG,GAAG,QACHpE,KAAK,QACLmB,MAAOwC,EAAMmB,MACbT,QAAS,SAAAC,GAAC,OACRrF,EAAKR,SAAS,CAAEqF,oBAAqBQ,EAAEC,UAEzCC,SAAU,SAAAF,GACRrF,EAAK8E,OAAO,QAASO,EAAEC,OAAOpD,cAO1CyB,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,iEACb0E,EAAAC,EAAAC,cAAC8B,EAAD,CACEvD,cAAepE,KAAK8G,OACpBlG,MAAOiG,EACPtE,QAAS,CAAEb,UAAU,eA5CV8E,aCqDVsB,6MApDbnH,MAAQ,CACN+F,MAAO,CACLqB,QAAS,IAEXlB,oBAAqB,QAEvBC,OAAS,SAAC7D,EAAKiB,GACbrE,EAAK2B,SAAS,CAAEkF,MAAM5G,OAAAiH,EAAA,EAAAjH,CAAA,GAAMD,EAAKc,MAAM+F,MAAlB5G,OAAAkH,EAAA,EAAAlH,CAAA,GAA0BmD,EAAMiB,+EAE9C,IAAAlC,EAAAhC,KAAAU,EACgCV,KAAKW,MAApC+F,EADDhG,EACCgG,MAAOG,EADRnG,EACQmG,oBACf,OACElB,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,oBACb0E,EAAAC,EAAAC,cAAA,MAAI5E,UAAU,uBAAd,kBACA0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,uDACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,QAAM5E,UAAU,eACd0E,EAAAC,EAAAC,cAAA,SAAOoB,QAAQ,UAAUhG,UAAU,QAAnC,YAGA0E,EAAAC,EAAAC,cAAA,YACEqB,KAAK,OACLjG,UAAU,eACVkG,GAAG,UACHpE,KAAK,UACLmB,MAAOwC,EAAMqB,QACbX,QAAS,SAAAC,GAAC,OACRrF,EAAKR,SAAS,CAAEqF,oBAAqBQ,EAAEC,UAEzCC,SAAU,SAAAF,GACRrF,EAAK8E,OAAO,UAAWO,EAAEC,OAAOpD,QAElC8D,MAAO,CAAEC,OAAQ,WAAYC,OAAQ,cAM/CvC,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,iEACb0E,EAAAC,EAAAC,cAAC8B,EAAD,CACEvD,cAAepE,KAAK8G,OACpBlG,MAAOiG,cA5CML,aCyIZ2B,6MAxIbxH,MAAQ,CACN+F,MAAO,CACL0B,QAAS,GACTC,QAAS,IAEXxB,oBAAqB,KACrByB,OAAQ,MACRC,OAAQ,QAEVC,QAAU,OACV1B,OAAS,SAAC7D,EAAKiB,GACbrE,EAAK2B,SAAS,CAAEkF,MAAM5G,OAAAiH,EAAA,EAAAjH,CAAA,GAAMD,EAAKc,MAAM+F,MAAlB5G,OAAAkH,EAAA,EAAAlH,CAAA,GAA0BmD,EAAMiB,SAEvDuE,aAAe,SAAApB,GACbxH,EAAK2B,SAAS,CAAE8G,OAAQjB,EAAEC,OAAOpD,iFAE1B,IAAAlC,EAAAhC,KAAAU,EACwCV,KAAKW,MAA5C+F,EADDhG,EACCgG,MAAOG,EADRnG,EACQmG,oBAAqB0B,EAD7B7H,EAC6B6H,OACpC,OACE5C,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,oBACb0E,EAAAC,EAAAC,cAAA,MAAI5E,UAAU,uBAAd,gBACA0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,uDACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,QACE5E,UAAU,cACVyH,SAAU,SAAArB,GACRA,EAAEsB,iBACE3G,EAAKwG,UACPI,aAAa5G,EAAKwG,SAClBxG,EAAKwG,QAAU,MAJJ,IAQTD,EARSM,EAMc7G,EAAKrB,MAAM+F,MAAhC0B,EANOS,EAMPT,QAASC,EANFQ,EAMER,QACPC,EAAWtG,EAAKrB,MAAhB2H,OAIR,GAFAF,EAAUU,WAAWV,GACrBC,EAAUS,WAAWT,IAChBU,MAAMX,KAAaW,MAAMV,GAAU,CACtC,OAAQC,GACN,IAAK,MACHC,EAASH,EAAUC,EACnB,MACF,IAAK,MACHE,EAASH,EAAUC,EACnB,MACF,IAAK,MACHE,EAASH,EAAUC,EACnB,MACF,IAAK,MAEDE,EADc,IAAZF,EACO,WAEAD,EAAUC,EAKrBE,GACFvG,EAAKR,SACH,CAAE+G,OAAQS,KAAKC,MAAMV,IAAW,eAChC,WACEvG,EAAKwG,QAAUhI,WAAW,WACxBwB,EAAKR,SAAS,CAAE+G,OAAQ,QACvB,UAOb5C,EAAAC,EAAAC,cAAA,SACEqB,KAAK,OACLjG,UAAU,eACVkG,GAAG,UACHpE,KAAK,UACLmB,MAAOwC,EAAM0B,QACbhB,QAAS,SAAAC,GAAC,OACRrF,EAAKR,SAAS,CAAEqF,oBAAqBQ,EAAEC,UAEzCC,SAAU,SAAAF,GACRrF,EAAK8E,OAAO,UAAWO,EAAEC,OAAOpD,QAElCgF,YAAY,iBAEdvD,EAAAC,EAAAC,cAAA,UACE5E,UAAU,yBACViD,MAAOwC,EAAM4B,OACbf,SAAUvH,KAAKyI,cAEf9C,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,OAAd,OACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,OAAd,OACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,OAAd,OACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,OAAd,QAEFyB,EAAAC,EAAAC,cAAA,SACEqB,KAAK,OACLjG,UAAU,eACVkG,GAAG,UACHpE,KAAK,UACLmB,MAAOwC,EAAM2B,QACbjB,QAAS,SAAAC,GAAC,OACRrF,EAAKR,SAAS,CAAEqF,oBAAqBQ,EAAEC,UAEzCC,SAAU,SAAAF,GACRrF,EAAK8E,OAAO,UAAWO,EAAEC,OAAOpD,QAElCgF,YAAY,iBAEdvD,EAAAC,EAAAC,cAAA,UAAQqB,KAAK,SAASjG,UAAU,wBAAhC,WAIDsH,EACC5C,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,qCAAf,cACcsH,GAEZ,QAIV5C,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,iEACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAWwG,OAAOC,WAAa,IAAM,WAAa,IACrD/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEvD,cAAepE,KAAK8G,OACpBlG,MAAOiG,EACPtE,QAAS,CAAEC,aAAa,gBA/HlBgE,aC4CtB2C,IAASC,OAAOzD,EAAAC,EAAAC,cAtCJ,WACV,OACEF,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACE1D,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,qDACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAA,MAAI5E,UAAU,eAAd,iDAKJ0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,4BACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,YACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAACyD,EAAD,QAIJ3D,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,YACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,YACb0E,EAAAC,EAAAC,cAAC0D,EAAD,OAGF5D,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,YACb0E,EAAAC,EAAAC,cAAC2D,EAAD,QAIJ7D,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,YACb0E,EAAAC,EAAAC,cAAA,OAAK5E,UAAU,aACb0E,EAAAC,EAAAC,cAAC4D,EAAD,WASI,MAASnI,SAASoI,eAAe","file":"static/js/main.cad03239.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ReactVirtualKeyboard.css\";\n\nclass ReactVirtualKeyboard extends Component {\n  constructor(props) {\n    super(props);\n    this.keys = [\n      [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"back\"],\n      [\"-\", \"_\", \"(\", \")\", \"{\", \"}\", \"[\", \"]\", \"|\", \":\", '\"'],\n      [\"<\", \">\", \",\", \".\", \"?\", \"/\", \"+\", \"#\", \"$\", \"%\", \"*\"],\n      [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"back\"],\n      [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"enter\"],\n      [\"shift\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"!\", \"?\", \"clear\"],\n      [\"123\", \"@\", \"space\", \".com\", \".\", \"123\"]\n    ];\n    this.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    this.state = {\n      currentKeys: null,\n      shift: false,\n      numbers: false,\n      isMounted: false,\n      input: null,\n      inputCaretPosition: 0,\n      _input: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const keys = JSON.parse(JSON.stringify(this.keys)).slice(3);\n    this.setState(\n      {\n        currentKeys: keys,\n        isMounted: true,\n        input: this.props.input\n      },\n      () => {\n        const { input } = this.state;\n        if (input) {\n          this.setBlur();\n        }\n        document.addEventListener(\"click\", this.documentClick);\n        const options = this.props.options;\n        if (options) {\n          if (options.alphabet === false && !options.onlyNumeric) {\n            this.activateNumbers();\n          }\n          if (options.onlyNumeric === true) {\n            const keys = [\n              [\"1\", \"2\", \"3\"],\n              [\"4\", \"5\", \"6\"],\n              [\"7\", \"8\", \"9\"],\n              [\"back\", \"0\", \"clear\"]\n            ];\n            this.setState({ currentKeys: keys });\n          }\n        }\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    const { input } = this.state;\n    if (input) {\n      input.removeEventListener(\"blur\", this.inputBlur);\n    }\n    document.removeEventListener(\"click\", this.documentClick);\n  }\n\n  componentWillReceiveProps(newProps) {\n    const currentInput = this.props.input;\n    const newInput = newProps.input;\n    if (!currentInput && newInput) {\n      return this.setState({ input: newInput }, () => {\n        this.setBlur();\n      });\n    }\n    if (\n      currentInput &&\n      newInput &&\n      newInput.name &&\n      currentInput.name &&\n      currentInput.name !== newInput.name\n    ) {\n      this.setState({ input: newInput }, () => {\n        this.setBlur();\n      });\n    }\n  }\n\n  setBlur() {\n    const { input } = this.state;\n    if (input) {\n      input.addEventListener(\"blur\", this.inputBlur);\n    }\n  }\n\n  inputBlur = () => {\n    return this.updateCaretPosition();\n  };\n\n  keyClick(k) {\n    const key = k && k.trim();\n    if (key === \"shift\") {\n      return this.activateShift();\n    }\n    if (key === \"123\") {\n      return this.activateNumbers();\n    }\n    return this.updateInput(key);\n  }\n\n  activateShift() {\n    this.setState({ shift: !this.state.shift }, () => {\n      const { shift, input } = this.state;\n      const newKeys = JSON.parse(JSON.stringify(this.keys)).slice(3);\n      const alphabet = this.alphabet.split(\"\");\n      newKeys.forEach(arr => {\n        arr.forEach((key, index, _arr) => {\n          if (key.length === 1 && alphabet.indexOf(key) > -1) {\n            _arr[index] = shift ? key.toUpperCase() : key.toLowerCase();\n          }\n        });\n      });\n      this.setState({ currentKeys: newKeys }, () => {\n        // this.setCaretPosition(input, inputCaretPosition);\n        if (input) {\n          input.focus();\n        }\n      });\n    });\n  }\n\n  activateNumbers() {\n    this.setState({ numbers: !this.state.numbers, shift: false }, () => {\n      const { numbers, input } = this.state;\n      const newKeys = JSON.parse(JSON.stringify(this.keys));\n      numbers ? newKeys.splice(3, 3) : newKeys.splice(0, 3);\n      this.setState({ currentKeys: newKeys }, () => {\n        if (input) {\n          input.focus();\n        }\n      });\n    });\n  }\n\n  updateInput(value) {\n    const { input } = this.state;\n    let { inputCaretPosition } = this.state;\n    const { updateHandler } = this.props;\n    if (input && updateHandler && typeof updateHandler === \"function\") {\n      const currentModelValue = input.value;\n      const currentModel = input[\"name\"];\n      if (value === \"enter\") {\n        if (input.nodeName.toLocaleLowerCase() === \"textarea\") {\n          value = \"\\n\";\n        } else {\n          this.setCaretPosition(input, inputCaretPosition);\n          return;\n        }\n      }\n      if (value === \"space\") {\n        value = \" \";\n      }\n      if (value === \"clear\") {\n        inputCaretPosition = 0;\n        return this.setState({ inputCaretPosition }, () => {\n          const { input } = this.state;\n          if (input) {\n            input.focus();\n          }\n          updateHandler(currentModel, \"\");\n        });\n      }\n      if (currentModelValue) {\n        let newValue = \"\";\n        const temp = inputCaretPosition;\n        if (\n          inputCaretPosition >= 0 &&\n          inputCaretPosition <= currentModelValue.length\n        ) {\n          const pos = inputCaretPosition++;\n          if (value === \"back\") {\n            if (temp > 0) {\n              newValue =\n                currentModelValue.substr(0, pos - 1) +\n                currentModelValue.substr(pos);\n              inputCaretPosition -= 2;\n            } else {\n              inputCaretPosition = temp;\n            }\n          } else {\n            newValue =\n              currentModelValue.substr(0, pos) +\n              value +\n              currentModelValue.substr(pos);\n            if (value === \".com\") {\n              inputCaretPosition += 3;\n            }\n          }\n        }\n        if (newValue.length) {\n          this.setState({ inputCaretPosition }, () => {\n            updateHandler(currentModel, newValue);\n          });\n        } else {\n          if (value === \"back\") {\n            if (temp <= 0) {\n              input.focus();\n              return;\n            }\n            this.setState({ inputCaretPosition }, () => {\n              updateHandler(currentModel, \"\");\n            });\n          } else {\n            this.setState({ inputCaretPosition }, () => {\n              updateHandler(currentModel, `${currentModel}${value}`);\n            });\n          }\n        }\n      } else {\n        if (value === \"back\") {\n          input.focus();\n          return;\n        }\n        inputCaretPosition += 1;\n        if (value === \".com\") {\n          inputCaretPosition += 3;\n        }\n        this.setState({ inputCaretPosition }, () => {\n          updateHandler(currentModel, value);\n        });\n      }\n      this.setState({ inputCaretPosition }, () => {\n        this.setCaretPosition(input, this.state.inputCaretPosition);\n      });\n    }\n  }\n\n  setCaretPosition(el, caretPos) {\n    if (el) {\n      if (el.createTextRange) {\n        const range = el.createTextRange();\n        range.move(\"character\", caretPos);\n        range.select();\n        return true;\n      } else {\n        if (el.selectionStart || el.selectionStart === 0) {\n          el.focus();\n          setTimeout(() => el.setSelectionRange(caretPos, caretPos), 0);\n          return true;\n        } else {\n          el.focus();\n          return false;\n        }\n      }\n    }\n  }\n\n  updateCaretPosition() {\n    const { input } = this.state;\n    if (input) {\n      const inputCaretPosition = this.getCaretPosition(input);\n      this.setState({ inputCaretPosition });\n    }\n  }\n\n  getCaretPosition(input) {\n    let iCaretPos = 0;\n    if (document[\"selection\"]) {\n      input.focus();\n      const oSel = document[\"selection\"].createRange();\n      oSel.moveStart(\"character\", -input.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (\n      input &&\n      (input.selectionStart || input.selectionStart === \"0\")\n    ) {\n      iCaretPos = input.selectionStart;\n    }\n    return iCaretPos;\n  }\n\n  documentClick = event => {\n    setTimeout(() => {\n      let keyboard = false;\n      const { input, _input } = this.state;\n      if (event[\"path\"] && event[\"path\"].length) {\n        event[\"path\"].some(el => {\n          if (\n            el.className &&\n            el.className.length &&\n            el.className.indexOf(\"keyboard-container\") >= 0\n          ) {\n            keyboard = true;\n            return true;\n          }\n          return false;\n        });\n      }\n      if (keyboard) {\n        return false;\n      }\n      if (\n        event[\"path\"] &&\n        event[\"path\"][0] &&\n        (event[\"path\"][0].nodeName.toLowerCase() === \"input\" ||\n          event[\"path\"][0].nodeName.toLowerCase() === \"textarea\")\n      ) {\n        if (!input && _input) {\n          const inputEl = document.getElementsByName(_input);\n          if (inputEl.length) {\n            this.setState({ input: inputEl[0] });\n          }\n        }\n        return false;\n      }\n      if (input) {\n        this.setState({ _input: input[\"name\"] });\n      }\n      this.setState({ input: null });\n    }, 0);\n  };\n\n  createKey(key, shift, numbers) {\n    switch (key) {\n      case \"back\": {\n        return (\n          <button className=\"back-key\" title=\"BACKSPACE\">\n            &#9003;\n          </button>\n        );\n      }\n      case \"enter\": {\n        return (\n          <button className=\"enter-key\" title=\"ENTER\">\n            &#8629;\n          </button>\n        );\n      }\n      case \"shift\": {\n        return (\n          <button className={shift ? \"shift\" : \"\"} title=\"SHIFT\">\n            &#8679;\n          </button>\n        );\n      }\n      case \"space\": {\n        return (\n          <button className=\"space-key\" title=\"SPACE\">\n            {key}\n          </button>\n        );\n      }\n      case \"clear\": {\n        return <button title=\"CLEAR\">&#10754;</button>;\n      }\n      default: {\n        return (\n          <button>\n            {numbers && key === \"123\"\n              ? \"ABC\"\n              : numbers && key === \"ABC\"\n              ? \"123\"\n              : key}\n          </button>\n        );\n      }\n    }\n  }\n\n  render() {\n    const { currentKeys, shift, numbers, isMounted } = this.state;\n    if (!isMounted) {\n      return null;\n    }\n    return (\n      <div className=\"keyboard-container\">\n        {currentKeys.map((keys, keysIndex) => {\n          const i = ++keysIndex;\n          return (\n            <ul className={`row-${i}`} key={i}>\n              {keys.map((key, keyIndex) => {\n                const i = ++keyIndex;\n                return (\n                  <li\n                    key={`${key.toLowerCase()}-${i}`}\n                    onClick={() => this.keyClick(key)}\n                  >\n                    {this.createKey(key, shift, numbers)}\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ReactVirtualKeyboard;\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass ExampleOne extends Component {\r\n  state = {\r\n    model: {\r\n      username: \"\",\r\n      password: \"\"\r\n    },\r\n    currentInputElement: null\r\n  };\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Exmple one:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-inline\">\r\n                  <label htmlFor=\"username\" className=\"mr-2\">\r\n                    Username:\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    value={model.username}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"username\", e.target.value);\r\n                    }}\r\n                    autoFocus\r\n                  />\r\n                  <label className=\"mr-2 ml-3\" htmlFor=\"password\">\r\n                    Password:\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={model.password}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"password\", e.target.value);\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <div className={window.innerWidth > 600 ? \"w-75 p-3\" : \"\"}>\r\n              <ReactVirtualKeyboard\r\n                updateHandler={this.update}\r\n                input={currentInputElement}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleOne;\r\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass ExampleTwo extends Component {\r\n  state = {\r\n    model: {\r\n      phone: \"\"\r\n    },\r\n    currentInputElement: null\r\n  };\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Example two:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-inline\">\r\n                  <label htmlFor=\"phone\" className=\"mr-2\">\r\n                    Phone:\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    value={model.phone}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"phone\", e.target.value);\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <ReactVirtualKeyboard\r\n              updateHandler={this.update}\r\n              input={currentInputElement}\r\n              options={{ alphabet: false }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleTwo;\r\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass ExampleThree extends Component {\r\n  state = {\r\n    model: {\r\n      message: \"\"\r\n    },\r\n    currentInputElement: null\r\n  };\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Example Three:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-inline\">\r\n                  <label htmlFor=\"message\" className=\"mr-2\">\r\n                    Message:\r\n                  </label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    value={model.message}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"message\", e.target.value);\r\n                    }}\r\n                    style={{ margin: \"0px auto\", height: \"38px\" }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <ReactVirtualKeyboard\r\n              updateHandler={this.update}\r\n              input={currentInputElement}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleThree;\r\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass Example extends Component {\r\n  state = {\r\n    model: {\r\n      number1: \"\",\r\n      number2: \"\"\r\n    },\r\n    currentInputElement: null,\r\n    action: \"ADD\",\r\n    answer: null\r\n  };\r\n  timeout = null;\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ action: e.target.value });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement, answer } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Exmple four:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form\r\n                  className=\"form-inline\"\r\n                  onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (this.timeout) {\r\n                      clearTimeout(this.timeout);\r\n                      this.timeout = null;\r\n                    }\r\n                    let { number1, number2 } = this.state.model;\r\n                    const { action } = this.state;\r\n                    let answer;\r\n                    number1 = parseFloat(number1);\r\n                    number2 = parseFloat(number2);\r\n                    if (!isNaN(number1) && !isNaN(number2)) {\r\n                      switch (action) {\r\n                        case \"ADD\":\r\n                          answer = number1 + number2;\r\n                          break;\r\n                        case \"SUB\":\r\n                          answer = number1 - number2;\r\n                          break;\r\n                        case \"MUL\":\r\n                          answer = number1 * number2;\r\n                          break;\r\n                        case \"DIV\":\r\n                          if (number2 === 0) {\r\n                            answer = \"Infinity\";\r\n                          } else {\r\n                            answer = number1 / number2;\r\n                          }\r\n                          break;\r\n                        default:\r\n                      }\r\n                      if (answer) {\r\n                        this.setState(\r\n                          { answer: Math.round(answer) || \"almost zero\" },\r\n                          () => {\r\n                            this.timeout = setTimeout(() => {\r\n                              this.setState({ answer: null });\r\n                            }, 5000);\r\n                          }\r\n                        );\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"number1\"\r\n                    name=\"number1\"\r\n                    value={model.number1}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"number1\", e.target.value);\r\n                    }}\r\n                    placeholder=\"Enter number\"\r\n                  />\r\n                  <select\r\n                    className=\"form-control mr-3 ml-3\"\r\n                    value={model.action}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"ADD\">ADD</option>\r\n                    <option value=\"SUB\">SUB</option>\r\n                    <option value=\"MUL\">MUL</option>\r\n                    <option value=\"DIV\">DIV</option>\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"number2\"\r\n                    name=\"number2\"\r\n                    value={model.number2}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"number2\", e.target.value);\r\n                    }}\r\n                    placeholder=\"Enter number\"\r\n                  />\r\n                  <button type=\"submit\" className=\"btn btn-success ml-3\">\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n                {answer ? (\r\n                  <div className=\"alert alert-info mt-2 text-center\">\r\n                    Answer is: {answer}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <div className={window.innerWidth > 600 ? \"w-25 p-3\" : \"\"}>\r\n              <ReactVirtualKeyboard\r\n                updateHandler={this.update}\r\n                input={currentInputElement}\r\n                options={{ onlyNumeric: true }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport ExampleOne from \"./examples/example-one\";\nimport ExampleTwo from \"./examples/example-two\";\nimport ExampleThree from \"./examples/example-three\";\nimport ExampleFour from \"./examples/example-four\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <div className=\"row fixed-top pt-2 pb-2 bg-dark text-white shadow\">\n        <div className=\"col-md-12\">\n          <h4 className=\"text-center\">\n            A simple virtual keyboard built with react.\n          </h4>\n        </div>\n      </div>\n      <div className=\"container-fluid demo-app\">\n        <div className=\"row mt-5\">\n          <div className=\"col-md-12\">\n            <ExampleOne />\n          </div>\n        </div>\n\n        <div className=\"row mt-2\">\n          <div className=\"col-md-6\">\n            <ExampleTwo />\n          </div>\n\n          <div className=\"col-md-6\">\n            <ExampleThree />\n          </div>\n        </div>\n\n        <div className=\"row mt-2\">\n          <div className=\"col-md-12\">\n            <ExampleFour />\n          </div>\n        </div>\n\n      </div>\n    </React.Fragment>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}