{"version":3,"sources":["ReactVirtualKeyboard.js","examples/example-one.js","examples/example-two.js","examples/example-three.js","examples/example-four.js","index.js"],"names":["ReactVirtualKeyboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","keys","alphabet","state","currentKeys","shift","numbers","isMounted","inputCaretPosition","_this2","JSON","parse","stringify","slice","setState","options","onlyNumeric","activateNumbers","key","_this3","k","trim","activateShift","updateCaretPosition","update","_this4","newKeys","split","forEach","arr","index","_arr","length","indexOf","toUpperCase","toLowerCase","_this5","splice","value","_this6","_this$props","updateHandler","input","currentModelValue","currentModel","nodeName","toLocaleLowerCase","newValue","temp","pos","substr","concat","setCaretPosition","el","caretPos","createTextRange","range","move","select","selectionStart","focus","setTimeout","setSelectionRange","cb","getCaretPosition","iCaretPos","document","oSel","createRange","moveStart","text","react_default","a","createElement","className","title","_this7","_this$state","onMouseDown","e","stopPropagation","map","keysIndex","i","keyIndex","preventDefault","keyClick","createKey","Component","ExampleOne","model","username","password","currentInputElement","objectSpread","defineProperty","htmlFor","type","id","name","onFocus","target","onChange","autoFocus","window","innerWidth","src_ReactVirtualKeyboard_0","ExampleTwo","phone","ExampleThree","message","style","margin","height","Example","number1","number2","action","answer","timeout","handleChange","onSubmit","clearTimeout","_this2$state$model","parseFloat","isNaN","Math","round","placeholder","ReactDOM","render","Fragment","example_one","example_two","example_three","example_four","getElementById"],"mappings":"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","file":"static/js/main.57891275.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ReactVirtualKeyboard.css\";\r\n\r\nclass ReactVirtualKeyboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.keys = [\r\n      [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"back\"],\r\n      [\"-\", \"_\", \"(\", \")\", \"{\", \"}\", \"[\", \"]\", \"|\", \":\", '\"'],\r\n      [\"<\", \">\", \",\", \".\", \"?\", \"/\", \"+\", \"#\", \"$\", \"%\", \"*\"],\r\n      [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"back\"],\r\n      [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"enter\"],\r\n      [\"shift\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"!\", \"?\", \"clear\"],\r\n      [\"123\", \"@\", \"space\", \".com\", \".\", \"123\"]\r\n    ];\r\n    this.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n    this.state = {\r\n      currentKeys: null,\r\n      shift: false,\r\n      numbers: false,\r\n      isMounted: false,\r\n      inputCaretPosition: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const keys = JSON.parse(JSON.stringify(this.keys)).slice(3);\r\n    this.setState(\r\n      {\r\n        currentKeys: keys,\r\n        isMounted: true\r\n      },\r\n      () => {\r\n        const options = this.props.options;\r\n        if (options) {\r\n          if (options.alphabet === false && !options.onlyNumeric) {\r\n            this.activateNumbers();\r\n          }\r\n          if (options.onlyNumeric === true) {\r\n            const keys = [\r\n              [\"1\", \"2\", \"3\"],\r\n              [\"4\", \"5\", \"6\"],\r\n              [\"7\", \"8\", \"9\"],\r\n              [\"back\", \"0\", \"clear\"]\r\n            ];\r\n            this.setState({ currentKeys: keys });\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  keyClick(key) {\r\n    const k = key && key.trim();\r\n    if (k === \"shift\") {\r\n      return this.activateShift();\r\n    }\r\n    if (k === \"123\") {\r\n      return this.activateNumbers();\r\n    }\r\n    return this.updateCaretPosition(() => {\r\n      this.update(k);\r\n    });\r\n  }\r\n\r\n  activateShift() {\r\n    this.setState({ shift: !this.state.shift }, () => {\r\n      const { shift } = this.state;\r\n      const newKeys = JSON.parse(JSON.stringify(this.keys)).slice(3);\r\n      const alphabet = this.alphabet.split(\"\");\r\n      newKeys.forEach(arr => {\r\n        arr.forEach((key, index, _arr) => {\r\n          if (key.length === 1 && alphabet.indexOf(key) > -1) {\r\n            _arr[index] = shift ? key.toUpperCase() : key.toLowerCase();\r\n          }\r\n        });\r\n      });\r\n      this.setState({ currentKeys: newKeys });\r\n    });\r\n  }\r\n\r\n  activateNumbers() {\r\n    this.setState({ numbers: !this.state.numbers, shift: false }, () => {\r\n      const { numbers } = this.state;\r\n      const newKeys = JSON.parse(JSON.stringify(this.keys));\r\n      numbers ? newKeys.splice(3, 3) : newKeys.splice(0, 3);\r\n      this.setState({ currentKeys: newKeys });\r\n    });\r\n  }\r\n\r\n  update(value) {\r\n    let { inputCaretPosition } = this.state;\r\n    const { updateHandler, input } = this.props;\r\n    if (input && updateHandler) {\r\n      const currentModelValue = input.value;\r\n      const currentModel = input[\"name\"];\r\n      if (value === \"enter\") {\r\n        if (input.nodeName.toLocaleLowerCase() === \"textarea\") {\r\n          value = \"\\n\";\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (value === \"space\") {\r\n        value = \" \";\r\n      }\r\n      if (value === \"clear\") {\r\n        inputCaretPosition = 0;\r\n        return this.setState({ inputCaretPosition }, () => {\r\n          updateHandler(currentModel, \"\");\r\n        });\r\n      }\r\n      if (currentModelValue) {\r\n        let newValue = \"\";\r\n        const temp = inputCaretPosition;\r\n        if (\r\n          inputCaretPosition >= 0 &&\r\n          inputCaretPosition <= currentModelValue.length\r\n        ) {\r\n          const pos = inputCaretPosition++;\r\n          if (value === \"back\") {\r\n            if (temp > 0) {\r\n              newValue =\r\n                currentModelValue.substr(0, pos - 1) +\r\n                currentModelValue.substr(pos);\r\n              inputCaretPosition -= 2;\r\n            } else {\r\n              inputCaretPosition = temp;\r\n            }\r\n          } else {\r\n            newValue =\r\n              currentModelValue.substr(0, pos) +\r\n              value +\r\n              currentModelValue.substr(pos);\r\n            if (value === \".com\") {\r\n              inputCaretPosition += 3;\r\n            }\r\n          }\r\n        }\r\n        if (newValue.length) {\r\n          this.setState({ inputCaretPosition }, () => {\r\n            updateHandler(currentModel, newValue);\r\n          });\r\n        } else {\r\n          if (value === \"back\") {\r\n            if (temp <= 0) {\r\n              return;\r\n            }\r\n            this.setState({ inputCaretPosition }, () => {\r\n              updateHandler(currentModel, \"\");\r\n            });\r\n          } else {\r\n            this.setState({ inputCaretPosition }, () => {\r\n              updateHandler(currentModel, `${currentModel}${value}`);\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (value === \"back\") {\r\n          return;\r\n        }\r\n        inputCaretPosition += 1;\r\n        if (value === \".com\") {\r\n          inputCaretPosition += 3;\r\n        }\r\n        this.setState({ inputCaretPosition }, () => {\r\n          updateHandler(currentModel, value);\r\n        });\r\n      }\r\n      this.setState({ inputCaretPosition }, () => {\r\n        this.setCaretPosition(input, this.state.inputCaretPosition);\r\n      });\r\n    }\r\n  }\r\n\r\n  setCaretPosition(el, caretPos) {\r\n    if (el) {\r\n      if (el.createTextRange) {\r\n        const range = el.createTextRange();\r\n        range.move(\"character\", caretPos);\r\n        range.select();\r\n        return true;\r\n      } else {\r\n        if (el.selectionStart || el.selectionStart === 0) {\r\n          el.focus();\r\n          setTimeout(() => el.setSelectionRange(caretPos, caretPos), 0);\r\n          return true;\r\n        } else {\r\n          el.focus();\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateCaretPosition(cb) {\r\n    const { input } = this.props;\r\n    if (input) {\r\n      const inputCaretPosition = this.getCaretPosition(input);\r\n      this.setState({ inputCaretPosition }, cb);\r\n    }\r\n  }\r\n\r\n  getCaretPosition(input) {\r\n    let iCaretPos = 0;\r\n    if (document[\"selection\"]) {\r\n      input.focus();\r\n      const oSel = document[\"selection\"].createRange();\r\n      oSel.moveStart(\"character\", -input.value.length);\r\n      iCaretPos = oSel.text.length;\r\n    } else if (\r\n      input &&\r\n      (input.selectionStart || input.selectionStart === \"0\")\r\n    ) {\r\n      iCaretPos = input.selectionStart;\r\n    }\r\n    return iCaretPos;\r\n  }\r\n\r\n  createKey(key, shift, numbers) {\r\n    switch (key) {\r\n      case \"back\": {\r\n        return (\r\n          <button className=\"back-key\" title=\"BACKSPACE\">\r\n            &#9003;\r\n          </button>\r\n        );\r\n      }\r\n      case \"enter\": {\r\n        return (\r\n          <button className=\"enter-key\" title=\"ENTER\">\r\n            &#8629;\r\n          </button>\r\n        );\r\n      }\r\n      case \"shift\": {\r\n        return (\r\n          <button className={shift ? \"shift-activated\" : \"shift\"} title=\"SHIFT\">\r\n            &#8679;\r\n          </button>\r\n        );\r\n      }\r\n      case \"space\": {\r\n        return (\r\n          <button className=\"space-key\" title=\"SPACE\">\r\n            {key}\r\n          </button>\r\n        );\r\n      }\r\n      case \"clear\": {\r\n        return (\r\n          <button title=\"CLEAR\" className=\"clear-key\">\r\n            &#10754;\r\n          </button>\r\n        );\r\n      }\r\n      default: {\r\n        return (\r\n          <button>\r\n            {numbers && key === \"123\"\r\n              ? \"ABC\"\r\n              : numbers && key === \"ABC\"\r\n              ? \"123\"\r\n              : key}\r\n          </button>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { currentKeys, shift, numbers, isMounted } = this.state;\r\n    if (!isMounted) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div\r\n        className=\"keyboard-container\"\r\n        onMouseDown={e => e.stopPropagation()}\r\n      >\r\n        {currentKeys.map((keys, keysIndex) => {\r\n          const i = ++keysIndex;\r\n          return (\r\n            <ul className={`row-${i}`} key={i}>\r\n              {keys.map((key, keyIndex) => {\r\n                const i = ++keyIndex;\r\n                return (\r\n                  <li\r\n                    key={`${key.toLowerCase()}-${i}`}\r\n                    onMouseDown={e => {\r\n                      e.preventDefault();\r\n                      e.stopPropagation();\r\n                      this.keyClick(key);\r\n                    }}\r\n                  >\r\n                    {this.createKey(key, shift, numbers)}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactVirtualKeyboard.propTypes = {\r\n  input: PropTypes.oneOfType([\r\n    PropTypes.instanceOf(HTMLInputElement),\r\n    PropTypes.instanceOf(HTMLTextAreaElement)\r\n  ]),\r\n  updateHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ReactVirtualKeyboard;\r\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass ExampleOne extends Component {\r\n  state = {\r\n    model: {\r\n      username: \"\",\r\n      password: \"\"\r\n    },\r\n    currentInputElement: null\r\n  };\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Exmple one:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-inline\">\r\n                  <label htmlFor=\"username\" className=\"mr-2\">\r\n                    Username:\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    value={model.username}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"username\", e.target.value);\r\n                    }}\r\n                    autoFocus\r\n                  />\r\n                  <label className=\"mr-2 ml-3\" htmlFor=\"password\">\r\n                    Password:\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={model.password}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"password\", e.target.value);\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <div className={window.innerWidth > 600 ? \"w-75 p-3\" : \"\"}>\r\n              <ReactVirtualKeyboard\r\n                updateHandler={this.update}\r\n                input={currentInputElement}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleOne;\r\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass ExampleTwo extends Component {\r\n  state = {\r\n    model: {\r\n      phone: \"\"\r\n    },\r\n    currentInputElement: null\r\n  };\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Example two:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-inline\">\r\n                  <label htmlFor=\"phone\" className=\"mr-2\">\r\n                    Phone:\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    value={model.phone}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"phone\", e.target.value);\r\n                    }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <ReactVirtualKeyboard\r\n              updateHandler={this.update}\r\n              input={currentInputElement}\r\n              options={{ alphabet: false }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleTwo;\r\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass ExampleThree extends Component {\r\n  state = {\r\n    model: {\r\n      message: \"\"\r\n    },\r\n    currentInputElement: null\r\n  };\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Example Three:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form className=\"form-inline\">\r\n                  <label htmlFor=\"message\" className=\"mr-2\">\r\n                    Message:\r\n                  </label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    value={model.message}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"message\", e.target.value);\r\n                    }}\r\n                    style={{ margin: \"0px auto\", height: \"38px\" }}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <ReactVirtualKeyboard\r\n              updateHandler={this.update}\r\n              input={currentInputElement}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleThree;\r\n","import React, { Component } from \"react\";\r\nimport ReactVirtualKeyboard from \"../ReactVirtualKeyboard\";\r\n\r\nclass Example extends Component {\r\n  state = {\r\n    model: {\r\n      number1: \"\",\r\n      number2: \"\"\r\n    },\r\n    currentInputElement: null,\r\n    action: \"ADD\",\r\n    answer: null\r\n  };\r\n  timeout = null;\r\n  update = (key, value) => {\r\n    this.setState({ model: { ...this.state.model, [key]: value } });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ action: e.target.value });\r\n  };\r\n  render() {\r\n    const { model, currentInputElement, answer } = this.state;\r\n    return (\r\n      <div className=\"card border-info\">\r\n        <h5 className=\"card-header bg-info\">Exmple four:</h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <div className=\"card mb-2\">\r\n              <div className=\"card-body\">\r\n                <form\r\n                  className=\"form-inline\"\r\n                  onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (this.timeout) {\r\n                      clearTimeout(this.timeout);\r\n                      this.timeout = null;\r\n                    }\r\n                    let { number1, number2 } = this.state.model;\r\n                    const { action } = this.state;\r\n                    let answer;\r\n                    number1 = parseFloat(number1);\r\n                    number2 = parseFloat(number2);\r\n                    if (!isNaN(number1) && !isNaN(number2)) {\r\n                      switch (action) {\r\n                        case \"ADD\":\r\n                          answer = number1 + number2;\r\n                          break;\r\n                        case \"SUB\":\r\n                          answer = number1 - number2;\r\n                          break;\r\n                        case \"MUL\":\r\n                          answer = number1 * number2;\r\n                          break;\r\n                        case \"DIV\":\r\n                          if (number2 === 0) {\r\n                            answer = \"Infinity\";\r\n                          } else {\r\n                            answer = number1 / number2;\r\n                          }\r\n                          break;\r\n                        default:\r\n                      }\r\n                      if (answer) {\r\n                        this.setState(\r\n                          { answer: Math.round(answer) || \"almost zero\" },\r\n                          () => {\r\n                            this.timeout = setTimeout(() => {\r\n                              this.setState({ answer: null });\r\n                            }, 5000);\r\n                          }\r\n                        );\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"number1\"\r\n                    name=\"number1\"\r\n                    value={model.number1}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"number1\", e.target.value);\r\n                    }}\r\n                    placeholder=\"Enter number\"\r\n                  />\r\n                  <select\r\n                    className=\"form-control mr-3 ml-3\"\r\n                    value={model.action}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"ADD\">ADD</option>\r\n                    <option value=\"SUB\">SUB</option>\r\n                    <option value=\"MUL\">MUL</option>\r\n                    <option value=\"DIV\">DIV</option>\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"number2\"\r\n                    name=\"number2\"\r\n                    value={model.number2}\r\n                    onFocus={e =>\r\n                      this.setState({ currentInputElement: e.target })\r\n                    }\r\n                    onChange={e => {\r\n                      this.update(\"number2\", e.target.value);\r\n                    }}\r\n                    placeholder=\"Enter number\"\r\n                  />\r\n                  <button type=\"submit\" className=\"btn btn-success ml-3\">\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n                {answer ? (\r\n                  <div className=\"alert alert-info mt-2 text-center\">\r\n                    Answer is: {answer}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-items-center px-2 py-2\">\r\n            <div className={window.innerWidth > 600 ? \"w-25 p-3\" : \"\"}>\r\n              <ReactVirtualKeyboard\r\n                updateHandler={this.update}\r\n                input={currentInputElement}\r\n                options={{ onlyNumeric: true }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport ExampleOne from \"./examples/example-one\";\nimport ExampleTwo from \"./examples/example-two\";\nimport ExampleThree from \"./examples/example-three\";\nimport ExampleFour from \"./examples/example-four\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <div className=\"row fixed-top pt-2 pb-2 bg-dark text-white shadow\">\n        <div className=\"col-md-12\">\n          <h4 className=\"text-center\">\n            A simple virtual keyboard built with react.\n          </h4>\n        </div>\n      </div>\n      <div className=\"container-fluid demo-app\">\n        <div className=\"row mt-5\">\n          <div className=\"col-md-12\">\n            <ExampleOne />\n          </div>\n        </div>\n\n        <div className=\"row mt-2\">\n          <div className=\"col-md-6\">\n            <ExampleTwo />\n          </div>\n\n          <div className=\"col-md-6\">\n            <ExampleThree />\n          </div>\n        </div>\n\n        <div className=\"row mt-2\">\n          <div className=\"col-md-12\">\n            <ExampleFour />\n          </div>\n        </div>\n\n      </div>\n    </React.Fragment>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}